name: "gcc build"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - base

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Sanity_Checks:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: |
        # https://mariadb.com/docs/connect/programming-languages/c/install/#connector-c-install-repo-configure-cs
        # Ubuntu is using an old libmariadb but python3 pip expects it to be newer. Use the mariadb provided deb packages.
        wget -P /tmp/ https://downloads.mariadb.com/MariaDB/mariadb_repo_setup
        # Note: there is a sha256sum command here according to the above link, but I am unsure if this file may change with time
        chmod +x /tmp/mariadb_repo_setup
        sudo /tmp/mariadb_repo_setup --mariadb-server-version="mariadb-10.6"
        # Remove the above when it's no longer necessary

        sudo apt-get update
        sudo apt-get install -y software-properties-common cppcheck luajit-5.1-dev luarocks mariadb-server mariadb-client libmariadb-dev-compat binutils-dev
        pip install -r tools/requirements.txt
        luarocks install luacheck --local
        npm install -g diff-so-fancy
    - id: changed-files
      name: Get Changed Files
      uses: Ana06/get-changed-files@v2.2.0
      with:
        filter: |
          src/**
          scripts/**
          sql/**
      continue-on-error: true
    - name: List Changed Files
      if: always()
      run: |
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          echo "${changed_file}"
        done
    - name: Git Formatting Checks
      if: github.event_name == 'pull_request'
      run: |
        touch git_checks.txt
        bash tools/ci/git.sh origin/${{ github.event.pull_request.base.ref }} >> git_checks.txt || true
        cat git_checks.txt
        if [ -s git_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: General File Checks
      if: always()
      run: |
        touch general_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            bash tools/ci/general.sh ${changed_file} >> general_checks.txt || true
          fi
        done
        cat general_checks.txt
        if [ -s general_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: Lua Checks
      if: always()
      run: |
        touch lua_checks.txt
        python3 tools/ci/lua_stylecheck.py test >> lua_checks.txt

        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.lua ]]; then
              bash tools/ci/lua.sh ${changed_file} >> lua_checks.txt || true
            fi
          fi
        done

        python3 tools/ci/check_lua_binding_usage.py >> lua_checks.txt

        cat lua_checks.txt
        if [ -s lua_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: SQL Checks
      if: always()
      run: |
        touch sql_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.sql ]]; then
              bash tools/ci/sql.sh ${changed_file} >> sql_checks.txt || true
            fi
          fi
        done
        cat sql_checks.txt
        if [ -s sql_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: Python Checks
      if: always()
      run: |
        touch python_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.py ]]; then
              bash tools/ci/python.sh ${changed_file} >> python_checks.txt || true
            fi
          fi
        done
        cat python_checks.txt
        if [ -s python_checks.txt ]
        then
          exit 1
        fi
        exit 0

  Linux_GCC12_64bit:
    needs: Sanity_Checks
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common cmake libmariadb-dev-compat libluajit-5.1-dev libzmq3-dev zlib1g-dev libssl-dev binutils-dev
    #- name: Cache 'build' folder
    #  uses: actions/cache@v3
    #  with:
    #    path: build
    #    key: ${{ runner.os }}-gcc
    - name: Configure CMake
      run: |
        export CC=/usr/bin/gcc-12
        export CXX=/usr/bin/g++-12
        mkdir -p build
        CFLAGS=-m64 CXXFLAGS=-m64 LDFLAGS=-m64 cmake -S . -B build
    - name: Build
      run: |
        cmake --build build -j4
