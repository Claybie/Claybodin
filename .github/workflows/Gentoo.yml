name: "Gentoo build"

on:
  push:
    branches:
      - gentoo-workflow-clang17

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:

  Sanity_Checks:
    runs-on: ubuntu-22.04
    container: gentoo/stage3:amd64-desktop-systemd
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: |
        echo 'FEATURES="-ipc-sandbox -network-sandbox -pid-sandbox binpkg-request-signature"' >> /etc/portage/make.conf
        echo 'EMERGE_DEFAULT_OPTS="--binpkg-changed-deps=n --binpkg-respect-use=n --getbinpkg=y"' >> /etc/portage/make.conf
        echo 'MAKEOPTS="-j4"' >> /etc/portage/make.conf
        mkdir /etc/portage/repos.conf
        touch /etc/portage/repos.conf/gentoo.conf
        echo '[gentoo]
        sync-type = webrsync' >> /etc/portage/repos.conf/gentoo.conf
        emerge --sync
        emerge --quiet-build --oneshot dev-qt/qtcore
        emerge --quiet-build --oneshot dev-qt/qtgui
        emerge --quiet-build --oneshot dev-qt/qtdbus
        emerge --quiet-build --oneshot sys-libs/libomp
        emerge --quiet-build app-eselect/eselect-repository dev-vcs/git
        eselect repository add claytabase git https://github.com/claybie/claytabase.git
        eselect repository enable guru
        emaint sync -r claytabase
        emaint sync -r guru
        touch /etc/portage/package.accept_keywords/mariadb-connector-c
        touch /etc/portage/package.accept_keywords/mariadb-connector-python
        touch /etc/portage/package.accept_keywords/diff-so-fancy
        echo '>=dev-db/mariadb-connector-c-3.3.4 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-c
        echo '>=dev-python/mariadb-1.1.6 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-python
        echo '>=app-misc/diff-so-fancy-1.4.3-r1 ~amd64' >> /etc/portage/package.accept_keywords/diff-so-fancy
        emerge --quiet-build app-misc/screen dev-db/mariadb dev-lang/luajit net-libs/zeromq dev-python/black dev-python/colorama dev-python/GitPython dev-python/mariadb dev-python/pylint dev-python/pyyaml dev-python/pyzmq dev-python/regex dev-util/cppcheck dev-lua/luacheck app-misc/diff-so-fancy sys-devel/clang
        ln -s /usr/lib/llvm/17/bin/clang-format /usr/bin/
    - id: changed-files
      name: Get Changed Files
      uses: Ana06/get-changed-files@v2.2.0
      with:
        filter: |
          modules/**
          src/**
          scripts/**
          sql/**
      continue-on-error: true
    - name: List Changed Files
      if: always()
      run: |
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          echo "${changed_file}"
        done
    - name: Git Formatting Checks
      if: github.event_name == 'pull_request'
      run: |
        touch git_checks.txt
        bash tools/ci/git.sh origin/${{ github.event.pull_request.base.ref }} >> git_checks.txt || true
        cat git_checks.txt
        if [ -s git_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: General File Checks
      if: always()
      run: |
        touch general_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            bash tools/ci/general.sh ${changed_file} >> general_checks.txt || true
          fi
        done
        cat general_checks.txt
        if [ -s general_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: CPP Checks
      if: always()
      run: |
        touch cpp_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.cpp ]]; then
              bash tools/ci/cpp.sh ${changed_file} 2>> cpp_checks.txt || true
            fi
          fi
        done
        cat cpp_checks.txt
        if [ -s cpp_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: CPP Formatting Checks
      if: always()
      run: |
        git clone https://github.com/claybie/LeafSpringCog.git
        cd LeafSpringCog
        clang-format -version
        touch cpp_formatting_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.cpp || $changed_file == *.h ]]; then
              clang-format -style=file -i ${changed_file}
            fi
          fi
        done
        git diff --color >> cpp_formatting_checks.txt
        git reset --hard
        if [ -s cpp_formatting_checks.txt ]
        then
          echo ""
          echo "You have errors in your C++ code formatting."
          echo "Please see below in red for the incorrect formatting, and in green for the correct formatting."
          echo "You can either fix the formatting by hand or use clang-format."
          echo "(You can safely ignore warnings about \$TERM and tput)"
          echo ""
          cat cpp_formatting_checks.txt | diff-so-fancy || true
          exit 1
        fi
        exit 0
    - name: Upload CPP Formatting Diff
      if: hashFiles('cpp_formatting_checks.txt') != ''
      uses: actions/upload-artifact@v3
      with:
        name: clang_format_diff
        path: |
          cpp_formatting_checks.txt
    - name: Lua Checks
      if: always()
      run: |
        touch lua_checks.txt
        python3 tools/ci/lua_stylecheck.py test >> lua_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.lua ]]; then
              bash tools/ci/lua.sh ${changed_file} >> lua_checks.txt || true
            fi
          fi
        done
        python3 tools/ci/check_lua_binding_usage.py >> lua_checks.txt
        cat lua_checks.txt
        if [ -s lua_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: SQL Checks
      if: always()
      run: |
        touch sql_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.sql ]]; then
              bash tools/ci/sql.sh ${changed_file} >> sql_checks.txt || true
            fi
          fi
        done
        python3 tools/price_checker.py >> sql_checks.txt
        cat sql_checks.txt
        if [ -s sql_checks.txt ]
        then
          exit 1
        fi
        exit 0
    - name: Python Checks
      if: always()
      run: |
        touch python_checks.txt
        for changed_file in ${{ steps.changed-files.outputs.all }}; do
          if [[ -f $changed_file ]]; then
            if [[ $changed_file == *.py ]]; then
              bash tools/ci/python.sh ${changed_file} >> python_checks.txt || true
            fi
          fi
        done
        cat python_checks.txt
        if [ -s python_checks.txt ]
        then
          exit 1
        fi
        exit 0
        
  GCC13_64bit:
    needs: Sanity_Checks
    runs-on: ubuntu-22.04
    container: gentoo/stage3:amd64-desktop-systemd
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Emerge Dependencies
      run: |
        echo 'FEATURES="-ipc-sandbox -network-sandbox -pid-sandbox binpkg-request-signature"' >> /etc/portage/make.conf
        echo 'EMERGE_DEFAULT_OPTS="--binpkg-changed-deps=n --binpkg-respect-use=n --getbinpkg=y"' >> /etc/portage/make.conf
        echo 'MAKEOPTS="-j4"' >> /etc/portage/make.conf
        mkdir /etc/portage/repos.conf
        touch /etc/portage/repos.conf/gentoo.conf
        echo '[gentoo]
        sync-type = webrsync' >> /etc/portage/repos.conf/gentoo.conf
        emerge --sync
        emerge --quiet-build --oneshot dev-qt/qtcore
        emerge --quiet-build --oneshot dev-qt/qtgui
        emerge --quiet-build --oneshot dev-qt/qtdbus
        emerge --quiet-build --oneshot sys-libs/libomp
        emerge --quiet-build app-eselect/eselect-repository dev-vcs/git
        eselect repository add claytabase git https://github.com/claybie/claytabase.git
        eselect repository enable guru
        emaint sync -r claytabase
        emaint sync -r guru
        touch /etc/portage/package.accept_keywords/mariadb-connector-c
        touch /etc/portage/package.accept_keywords/mariadb-connector-python
        touch /etc/portage/package.accept_keywords/diff-so-fancy
        echo '>=dev-db/mariadb-connector-c-3.3.4 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-c
        echo '>=dev-python/mariadb-1.1.6 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-python
        echo '>=app-misc/diff-so-fancy-1.4.3-r1 ~amd64' >> /etc/portage/package.accept_keywords/diff-so-fancy
        emerge --quiet-build app-misc/screen dev-db/mariadb dev-lang/luajit net-libs/zeromq dev-python/black dev-python/colorama dev-python/GitPython dev-python/mariadb dev-python/pylint dev-python/pyyaml dev-python/pyzmq dev-python/regex dev-util/cppcheck dev-lua/luacheck app-misc/diff-so-fancy sys-devel/clang 
    #- name: Cache 'build' folder
    #  uses: actions/cache@v3
    #  with:
    #    path: build
    #    key: ${{ runner.os }}-clang
    - name: Configure CMake
      run: |
        export CC=/usr/bin/gcc
        export CXX=/usr/bin/g++
        mkdir -p build
        cmake -S . -B build
    - name: Build
      run: |
        cmake --build build -j4
          
  Clang17_64bit:
    needs: Sanity_Checks
    runs-on: ubuntu-22.04
    container: gentoo/stage3:amd64-desktop-systemd
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Emerge Dependencies
      run: |
        echo 'FEATURES="-ipc-sandbox -network-sandbox -pid-sandbox binpkg-request-signature"' >> /etc/portage/make.conf
        echo 'EMERGE_DEFAULT_OPTS="--binpkg-changed-deps=n --binpkg-respect-use=n --getbinpkg=y"' >> /etc/portage/make.conf
        echo 'MAKEOPTS="-j4"' >> /etc/portage/make.conf
        mkdir /etc/portage/repos.conf
        touch /etc/portage/repos.conf/gentoo.conf
        echo '[gentoo]
        sync-type = webrsync' >> /etc/portage/repos.conf/gentoo.conf
        emerge --sync
        emerge --quiet-build --oneshot dev-qt/qtcore
        emerge --quiet-build --oneshot dev-qt/qtgui
        emerge --quiet-build --oneshot dev-qt/qtdbus
        emerge --quiet-build --oneshot sys-libs/libomp
        emerge --quiet-build app-eselect/eselect-repository dev-vcs/git
        eselect repository add claytabase git https://github.com/claybie/claytabase.git
        eselect repository enable guru
        emaint sync -r claytabase
        emaint sync -r guru
        touch /etc/portage/package.accept_keywords/mariadb-connector-c
        touch /etc/portage/package.accept_keywords/mariadb-connector-python
        touch /etc/portage/package.accept_keywords/diff-so-fancy
        echo '>=dev-db/mariadb-connector-c-3.3.4 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-c
        echo '>=dev-python/mariadb-1.1.6 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-python
        echo '>=app-misc/diff-so-fancy-1.4.3-r1 ~amd64' >> /etc/portage/package.accept_keywords/diff-so-fancy
        emerge --quiet-build app-misc/screen dev-db/mariadb dev-lang/luajit net-libs/zeromq dev-python/black dev-python/colorama dev-python/GitPython dev-python/mariadb dev-python/pylint dev-python/pyyaml dev-python/pyzmq dev-python/regex dev-util/cppcheck dev-lua/luacheck app-misc/diff-so-fancy sys-devel/clang 
    #- name: Cache 'build' folder
    #  uses: actions/cache@v3
    #  with:
    #    path: build
    #    key: ${{ runner.os }}-clang
    - name: Configure CMake
      run: |
        export CC=/usr/lib/llvm/17/bin/clang
        export CXX=/usr/lib/llvm/17/bin/clang++
        mkdir -p build
        cmake -S . -B build
    - name: Build
      run: |
        cmake --build build -j4
    - name: Archive Executables
      uses: actions/upload-artifact@v3
      with:
        name: linux_executables
        path: |
          xi_connect
          xi_map
          xi_search
          xi_world
          
  ClangTidy17_64bit:
    needs: Sanity_Checks
    runs-on: ubuntu-22.04
    container: gentoo/stage3:amd64-desktop-systemd
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Emerge Dependencies
      run: |
        echo 'FEATURES="-ipc-sandbox -network-sandbox -pid-sandbox binpkg-request-signature"' >> /etc/portage/make.conf
        echo 'EMERGE_DEFAULT_OPTS="--binpkg-changed-deps=n --binpkg-respect-use=n --getbinpkg=y"' >> /etc/portage/make.conf
        echo 'MAKEOPTS="-j4"' >> /etc/portage/make.conf
        mkdir /etc/portage/repos.conf
        touch /etc/portage/repos.conf/gentoo.conf
        echo '[gentoo]
        sync-type = webrsync' >> /etc/portage/repos.conf/gentoo.conf
        emerge --sync
        emerge --quiet-build --oneshot dev-qt/qtcore
        emerge --quiet-build --oneshot dev-qt/qtgui
        emerge --quiet-build --oneshot dev-qt/qtdbus
        emerge --quiet-build --oneshot sys-libs/libomp
        emerge --quiet-build app-eselect/eselect-repository dev-vcs/git
        eselect repository add claytabase git https://github.com/claybie/claytabase.git
        eselect repository enable guru
        emaint sync -r claytabase
        emaint sync -r guru
        touch /etc/portage/package.accept_keywords/mariadb-connector-c
        touch /etc/portage/package.accept_keywords/mariadb-connector-python
        touch /etc/portage/package.accept_keywords/diff-so-fancy
        echo '>=dev-db/mariadb-connector-c-3.3.4 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-c
        echo '>=dev-python/mariadb-1.1.6 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-python
        echo '>=app-misc/diff-so-fancy-1.4.3-r1 ~amd64' >> /etc/portage/package.accept_keywords/diff-so-fancy
        emerge --quiet-build app-misc/screen dev-db/mariadb dev-lang/luajit net-libs/zeromq dev-python/black dev-python/colorama dev-python/GitPython dev-python/mariadb dev-python/pylint dev-python/pyyaml dev-python/pyzmq dev-python/regex dev-util/cppcheck dev-lua/luacheck app-misc/diff-so-fancy sys-devel/clang 
    #- name: Cache 'build' folder
    #  uses: actions/cache@v3
    #  with:
    #    path: build
    #    key: ${{ runner.os }}-clang
    - name: Configure CMake
      run: |
        export CC=/usr/lib/llvm/17/bin/clang
        export CXX=/usr/lib/llvm/17/bin/clang++
        mkdir -p build
        cmake -S . -B build -DENABLE_CLANG_TIDY=ON
    - name: Build
      run: |
        touch clang-tidy.txt
        cmake --build build -j4 >> clang-tidy.txt || true
        cat clang-tidy.txt
        if grep -q warning\|error clang-tidy.txt; then
            exit 1
        fi
        
  Startup_Checks:
    runs-on: ubuntu-22.04
    needs: Clang17_64bit
    services:
      mysql:
        image: mariadb:10.6
        env:
          MYSQL_DATABASE: xidb
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    container: gentoo/stage3:amd64-desktop-systemd
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - uses: actions/download-artifact@v3
      with:
        name: linux_executables
        path: .
    - name: Install Dependencies
      run: |
        echo 'FEATURES="-ipc-sandbox -network-sandbox -pid-sandbox binpkg-request-signature"' >> /etc/portage/make.conf
        echo 'EMERGE_DEFAULT_OPTS="--binpkg-changed-deps=n --binpkg-respect-use=n --getbinpkg=y"' >> /etc/portage/make.conf
        echo 'MAKEOPTS="-j4"' >> /etc/portage/make.conf
        mkdir /etc/portage/repos.conf
        touch /etc/portage/repos.conf/gentoo.conf
        echo '[gentoo]
        sync-type = webrsync' >> /etc/portage/repos.conf/gentoo.conf
        emerge --sync
        emerge --quiet-build --oneshot dev-qt/qtcore
        emerge --quiet-build --oneshot dev-qt/qtgui
        emerge --quiet-build --oneshot dev-qt/qtdbus
        emerge --quiet-build --oneshot sys-libs/libomp
        emerge --quiet-build app-eselect/eselect-repository dev-vcs/git
        eselect repository add claytabase git https://github.com/claybie/claytabase.git
        eselect repository enable guru
        emaint sync -r claytabase
        emaint sync -r guru
        touch /etc/portage/package.accept_keywords/mariadb-connector-c
        touch /etc/portage/package.accept_keywords/mariadb-connector-python
        touch /etc/portage/package.accept_keywords/diff-so-fancy
        echo '>=dev-db/mariadb-connector-c-3.3.4 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-c
        echo '>=dev-python/mariadb-1.1.6 ~amd64' >> /etc/portage/package.accept_keywords/mariadb-connector-python
        echo '>=app-misc/diff-so-fancy-1.4.3-r1 ~amd64' >> /etc/portage/package.accept_keywords/diff-so-fancy
        emerge --quiet-build app-admin/sudo app-misc/screen dev-db/mariadb dev-lang/luajit net-libs/zeromq dev-python/black dev-python/colorama dev-python/GitPython dev-python/mariadb dev-python/pylint dev-python/pyyaml dev-python/pyzmq dev-python/regex dev-util/cppcheck dev-lua/luacheck app-misc/diff-so-fancy sys-devel/clang 
    - name: Verify MySQL connection from container
      run: |
        mysql -h mysql -uroot -proot -e "SHOW DATABASES"
    - name: Import SQL files
      run: |
        for f in sql/*.sql; do
          echo -e "Importing $f into the database..."
          mysql xidb -h mysql -uroot -proot < $f
        done
        mysql xidb -h mysql -uroot -proot -e "SHOW tables"
    - name: Assign odd zones a different port
      run: |
        mysql xidb -h mysql -uroot -proot -e "UPDATE xidb.zone_settings SET zoneport = 54231 WHERE zoneid % 2 = 0;"
    - name: Copy settings
      run: |
        sed -i -e 's/SQL_HOST     = "127.0.0.1"/SQL_HOST     = "mysql"/g' settings/default/network.lua
        cp settings/default/* settings/
    - name: Startup checks
      run: |
         chmod +x xi_connect
         chmod +x xi_map
         chmod +x xi_search
         chmod +x xi_world
         echo '%wheel ALL=(ALL:ALL) NOPASSWD: ALL' | EDITOR='tee -a' visudo
         useradd -m -G wheel -s /bin/bash mog
         chown mog:wheel *
         su mog
         ls -l
         
         printf "\nStart server processes\n"
          screen -d -m -S xi_connect ./xi_connect --log login-server.log
          screen -d -m -S xi_search ./xi_search --log search-server.log
          screen -d -m -S xi_map ./xi_map --log map-server-0.log --ip 127.0.0.1 --port 54230
          screen -d -m -S xi_map ./xi_map --log map-server-1.log --ip 127.0.0.1 --port 54231
          screen -d -m -S xi_world ./xi_world --log world-server.log
    - name: Check for errors and warnings
      if: ${{ success() || failure() }}
      run: |
        sudo su
        cat login-server*.log
        cat search-server*.log
        cat map-server-0*.log
        cat map-server-1*.log
        cat world-server*.log

        if grep -qi "warning\|error\|crash" login-server*.log; then
            exit -1
        fi

        if grep -qi "warning\|error\|crash" search-server*.log; then
            exit -1
        fi

        if grep -qi "warning\|error\|crash" map-server-0*.log; then
            exit -1
        fi

        if grep -qi "warning\|error\|crash" map-server-1*.log; then
          exit -1
        fi

        if grep -qi "warning\|error\|crash" world-server*.log; then
          exit -1
        fi
